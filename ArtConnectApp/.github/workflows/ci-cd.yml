on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: yarn install

    - name: Run tests
      run: yarn test

    - name: Build Android
      run: |
        cd android
        ./gradlew assembleRelease

    - name: Build iOS
      if: runner.os == 'macOS'
      run: |
        cd ios
        xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -sdk iphoneos -configuration AppStoreDistribution archive -archivePath $PWD/build/YourApp.xcarchive

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install App Center CLI
      run: npm install -g appcenter-cli

    - name: Deploy Android to App Center
      env:
        APPCENTER_TOKEN: ${{ secrets.APPCENTER_TOKEN }}
      run: |
        appcenter distribute release \
          --app YourAppName/YourAndroidApp \
          --file android/app/build/outputs/apk/release/app-release.apk \
          --group Collaborators \
          --token $APPCENTER_TOKEN

    - name: Deploy iOS to App Center
      if: runner.os == 'macOS'
      env:
        APPCENTER_TOKEN: ${{ secrets.APPCENTER_TOKEN }}
      run: |
        appcenter distribute release \
          --app YourAppName/YouriOSApp \
          --file ios/build/YourApp.xcarchive/Products/Applications/YourApp.app \
          --group Collaborators \
          --token $APPCENTER_TOKEN